===============================
 Test 2-matrix_divided.py
 ===============================

 This library is very simple, since it only has one function called
 ``matrix_divided(matrix, div)``.

 Numbers
 =======

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

        >>> matrix_divided([[1, 2.7, 3], [4, 5, 6]], 3.5)
	[[0.29, 0.77, 0.86], [1.14, 1.43, 1.71]]

        >>> matrix_divided([[2, 4, 6]], 2)
	[[1.0, 2.0, 3.0]]

        >>> matrix_divided([[1, 2.7, 3], [4, 5, 6]], 3,5)
	Traceback (most recent call last):
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given

        >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

        >>> matrix_divided([[1, 2, 3], []], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

        >>> matrix_divided([1, 2, 3], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[], []], 3)
	[[], []]

        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
	
